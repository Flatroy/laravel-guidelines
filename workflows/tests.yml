name: Tests
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: Prepare The Environment
        run: cp .env.example .env

      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE laravel_ecommerce character set UTF8mb4 collate utf8mb4_bin;"

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Run Tests
        run: php artisan test

      - name: Upload Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: storage/logs

  dusk:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "8.0"
        node-version:
          - 16

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: "Install Node"
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node-version }}"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: "Install locked dependencies with npm"
        run: "npm ci --ignore-scripts"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: Prepare The Environment
        run: cp .env.example .env

      - name: Compile assets
        run: npm run production

      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE laravel_ecommerce character set UTF8mb4 collate utf8mb4_bin;"

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Run Laravel Server
        run: php artisan serve --no-reload &

      - name: Run Dusk Tests
        env:
          APP_URL: "http://127.0.0.1:8000"
        run: php artisan dusk

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console

      - name: Upload Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: storage/logs
